{"version":3,"sources":["mig_disco.js"],"names":["IG$","mg_disco","$s","extend","v$pnl","layout","_module","autoScroll","initapp","me","this","d_file_el","down","el","dom","m_fileupload","$","d_upfiles","empty","fileupload","appendTo","dropzone","d_progress","url","ig$","servlet","dataType","done","e","data","tnodes","i","p","rec","jdoc","result","errorcode","errormsg","dp","ShowErrorMessage","length","push","show","store","add","selModel","select","progressall","progress","parseInt","loaded","total","bar","css","text","dropZone","bind","load_dbpool","updateSchemas","dvalue","eul_schema","req","_rpc$","init","ack","payload","uid","mbody","option","schemas","loadData","send","toolbarHandler","cmd","d_bas","d_doc","eul_metadb","flists","items","selected","file_lists","checkRequired","setLoading","migrate_eex","module","eul_meta","getValue","bobj","_bobj","meta_type","doc_lists","migrate_doc","bas_lists","migrate_bas","r","tbobject","clearInvalid","markInvalid","address","d","name","disp","setValue","splice","stoploading","remove","initComponent","apply","xtype","padding","type","align","flex","title","fieldLabel","displayField","labelField","valueField","fields","listeners","change","tobj","scope","width","emptyText","IRm$","r1","readOnly","iconCls","tooltip","handler","dlgitemsel","metaSelectDlg","visibleItems","tree_options","cubebrowse","rootuid","callback","callBackObj","item","checkLogin","html","height","bodyPadding","hidden","selType","mode","columns","dataIndex","grid","rowIndex","colIndex","getAt","bbar","removeAll","hide","superclass","call","afterrender"],"mappings":"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","file":"../../../../../../mg_disco.min.js","sourcesContent":["IG$.mg_disco = $s.extend(IG$.v$pnl, {\r\n    layout: \"fit\",\r\n    _module: \"com.amplix.migration.discoverer.DiscoMigration\",\r\n    autoScroll: true,\r\n    initapp: function() {\r\n        var me = this,\r\n            d_file = me.down(\"[name=d_file]\"),\r\n            d_file_el = d_file.el.dom,\r\n            m_fileupload = $(\".m_fileupload\", d_file_el),\r\n            \r\n            d_upfiles = me.down(\"[name=d_upfiles]\");\r\n        \r\n        m_fileupload.empty();\r\n        \r\n        fileupload = $(\"<input type='file' name='files[]' data-url='upload' multiple></input>\").appendTo(m_fileupload);\r\n        dropzone = $(\"<div class='filedropzone fade well'>Drop files here</div>\").appendTo(m_fileupload);\r\n        d_progress = $(\"<div class='file-progress'><div class='bar' style='width: 0%;'></div></div>\").appendTo(m_fileupload);\r\n        \r\n        fileupload.fileupload({\r\n            url: ig$.servlet,\r\n            dataType: \"json\",\r\n            done: function (e, data) {\r\n                var jdoc = data.result || {errorcode: \"0xffff\", errormsg: \"Server incorrect responding\"},\r\n                    errcode = jdoc.errorcode,\r\n                    tnodes,\r\n                    i, dp = [], p, rec;\r\n                \r\n                if (errcode)\r\n                {\r\n                    IG$.ShowErrorMessage(jdoc, me, null);\r\n                }\r\n                else\r\n                {\r\n                    if (jdoc.result)\r\n                    {\r\n                        tnodes = jdoc.result.length ? jdoc.result : [jdoc.result];\r\n                        \r\n                        for (i=0; i < tnodes.length; i++)\r\n                        {\r\n                            p = tnodes[i];\r\n                            dp.push(p);\r\n                        }\r\n                    }\r\n                }\r\n                \r\n                if (dp && dp.length)\r\n                {\r\n                    d_upfiles.show();\r\n                    \r\n                    for (i=0; i < dp.length; i++)\r\n                    {\r\n                        rec = d_upfiles.store.add(dp[i]);\r\n                        d_upfiles.selModel.select(rec, true);\r\n                    }\r\n                }\r\n            },\r\n            progressall: function (e, data) {\r\n                var progress = parseInt(data.loaded / data.total * 100, 10),\r\n                    bar = $(\".bar\", d_progress);\r\n                bar.css(\r\n                    \"width\",\r\n                    progress + \"%\"\r\n                );\r\n                bar.text(\"Loaded \" + data.loaded + \" / \" + data.total);\r\n            },\r\n     \r\n            dropZone: dropzone\r\n        }).bind('fileuploadsubmit', function (e, data) {\r\n        });\r\n        \r\n        fileupload.fileupload(\"option\", \"url\", ig$.servlet);\r\n        \r\n        me.load_dbpool();\r\n    },\r\n    \r\n    updateSchemas: function(dvalue) {\r\n    \tvar me = this,\r\n    \t\teul_schema = me.down(\"[name=eul_schema]\");\r\n    \t\r\n    \tif (dvalue)\r\n    \t{\r\n    \t\tvar req = new IG$._rpc$();\r\n    \t\treq.init(me, \r\n                {\r\n                    ack: \"tablecontent\",\r\n                    payload: {uid: dvalue},\r\n                    mbody: {option: \"standard\"}\r\n                }, me, function(jdoc) {\r\n                \tvar schemas = jdoc.schemas;\r\n                \teul_schema.store.loadData(schemas);\r\n                }\r\n            );\r\n    \t\t\r\n    \t\treq.send();\r\n    \t}\r\n    \telse\r\n    \t{\r\n    \t\teul_schema.store.loadData([]);\r\n    \t}\r\n    },\r\n    \r\n    toolbarHandler: function(cmd) {\r\n        var me = this,\r\n            req,\r\n            d_upfiles = me.down(\"[name=d_upfiles]\"),\r\n            d_bas = me.down(\"[name=d_bas]\"),\r\n\t\t\td_doc = me.down(\"[name=d_doc]\"),\r\n            eul_metadb = me.down(\"[name=eul_metadb]\"),\r\n            eul_schema = me.down(\"[name=eul_schema]\"),\r\n            i, flists = [];\r\n        \r\n        switch (cmd)\r\n        {\r\n        case \"cmd_c_files\":\r\n            for (i=0; i < d_upfiles.store.data.items.length; i++)\r\n            {\r\n                if (d_upfiles.store.data.items[i].data.selected)\r\n                    flists.push(d_upfiles.store.data.items[i]);\r\n            }\r\n            \r\n            me.file_lists = flists;\r\n            \r\n            if (!me.checkRequired())\r\n            \treturn;\r\n            \r\n            if (flists.length)\r\n            {\r\n                me.setLoading(true);\r\n                me.migrate_eex();\r\n            }\r\n            break;\r\n\t\tcase \"cmd_r_doc\":\r\n\t\t\treq = new IG$._rpc$();\r\n            \r\n            if (!me.checkRequired())\r\n            \treturn;\r\n            \r\n            req.init(me, \r\n                {\r\n                    ack: \"migration\",\r\n                    payload: {module: me._module},\r\n                    mbody: {\r\n                        option: \"list_doc\",\r\n                        eul_meta: eul_metadb.getValue(),\r\n                        eul_schema: eul_schema.getValue(),\r\n                        bobj: me._bobj.uid\r\n                    },\r\n                    meta_type: \"object\"\r\n                }, me, function(jdoc) {\r\n                    d_doc.store.loadData(jdoc);\r\n                }\r\n            );\r\n            req.send();\r\n\t\t\tbreak;\r\n\t\tcase \"cmd_c_doc\":\r\n            for (i=0; i < d_doc.store.data.items.length; i++)\r\n            {\r\n                if (d_doc.store.data.items[i].data.selected)\r\n                    flists.push(d_doc.store.data.items[i]);\r\n            }\r\n            \r\n            me.doc_lists = flists;\r\n            \r\n            if (!me.checkRequired())\r\n            \treturn;\r\n            \r\n            if (flists.length)\r\n            {\r\n                me.setLoading(true);\r\n                \r\n                me.migrate_doc();\r\n            }\r\n            break;\r\n        case \"cmd_r_bas\":\r\n            req = new IG$._rpc$();\r\n            \r\n            if (!me.checkRequired())\r\n            \treturn;\r\n            \r\n            req.init(me, \r\n                {\r\n                    ack: \"migration\",\r\n                    payload: {module: me._module},\r\n                    mbody: {\r\n                        option: \"list_bas\",\r\n                        eul_meta: eul_metadb.getValue(),\r\n                        eul_schema: eul_schema.getValue(),\r\n                        bobj: me._bobj.uid\r\n                    },\r\n                    meta_type: \"object\"\r\n                }, me, function(jdoc) {\r\n                    d_bas.store.loadData(jdoc);\r\n                }\r\n            );\r\n            req.send();\r\n            break;\r\n        case \"cmd_c_bas\":\r\n            for (i=0; i < d_bas.store.data.items.length; i++)\r\n            {\r\n                if (d_bas.store.data.items[i].data.selected)\r\n                    flists.push(d_bas.store.data.items[i]);\r\n            }\r\n            \r\n            me.bas_lists = flists;\r\n            \r\n            if (!me.checkRequired())\r\n            \treturn;\r\n            \r\n            if (flists.length)\r\n            {\r\n                me.setLoading(true);\r\n                \r\n                me.migrate_bas();\r\n            }\r\n            break;\r\n        case \"cmd_d_file\":\r\n            break;\r\n        }\r\n    },\r\n    \r\n    checkRequired: function() {\r\n    \tvar me = this,\r\n    \t\tr = true,\r\n    \t\teul_metadb = me.down(\"[name=eul_metadb]\"),\r\n    \t\teul_schema = me.down(\"[name=eul_schema]\"),\r\n    \t\ttbobject = me.down(\"[name=tbobject]\");\r\n    \t\r\n    \teul_metadb.clearInvalid();\r\n        eul_schema.clearInvalid();\r\n        tbobject.clearInvalid();\r\n        \r\n        if (!eul_metadb.getValue())\r\n        {\r\n            eul_metadb.markInvalid(\"Required field\");\r\n            r = false;\r\n        }\r\n        \r\n        if (!eul_schema.getValue())\r\n        {\r\n        \teul_schema.markInvalid(\"Required field\");\r\n        \tr = false;\r\n        }\r\n        \r\n        if (!me._bobj)\r\n        {\r\n        \ttbobject.markInvalid(\"Required field\");\r\n        \tr = false;\r\n        }\r\n        \r\n        return r;\r\n    },\r\n    \r\n    load_dbpool: function() {\r\n        var me = this,\r\n            req = new IG$._rpc$();\r\n        \r\n        req.init(me, \r\n            {\r\n                ack: \"tablecontent\",\r\n                payload: {address: \"/\"},\r\n                mbody: {option: \"standard\"}\r\n            }, me, function(jdoc) {\r\n                var me = this,\r\n                    d,\r\n                    i, tnodes, tnode, address, req, dp = [],\r\n                    eul_metadb = me.down(\"[name=eul_metadb]\");\r\n                \r\n                dp.push({name:\"-- Select Database --\", uid:\"\"});\r\n                \r\n                if (jdoc && jdoc.length)\r\n                {\r\n                    for (i=0; i < jdoc.length; i++)\r\n                    {\r\n                        d = jdoc[i];\r\n                        d.name = d.disp || d.name;\r\n                        dp.push(d);\r\n                    }\r\n                }\r\n                \r\n                eul_metadb.store.loadData(dp);\r\n                eul_metadb.setValue(\"\");\r\n            }, false);\r\n        req.send();\r\n    },\r\n    \r\n    migrate_eex: function() {\r\n        var me = this,\r\n            d_upfiles = me.down(\"[name=d_upfiles]\");\r\n        \r\n        if (me.file_lists && me.file_lists.length)\r\n        {\r\n            var rec = me.file_lists.splice(0, 1)[0],\r\n                req = new IG$._rpc$();\r\n            \r\n            req.stoploading = false;\r\n            \r\n            req.init(me, \r\n                {\r\n                    ack: \"migration\",\r\n                    payload: {module: me._module},\r\n                    mbody: {\r\n                        option: \"migrate_eex\",\r\n                        eul_meta: me.down(\"[name=eul_metadb]\").getValue(),\r\n                        eul_schema: me.down(\"[name=eul_schema]\").getValue(),\r\n                        bobj: me._bobj.uid,\r\n                        items: [rec.data]\r\n                    },\r\n                    meta_type: \"object\"\r\n                }, me, function(jdoc) {\r\n                    d_upfiles.store.remove(rec);\r\n                    me.migrate_eex();\r\n                }\r\n            );\r\n            \r\n            req.send();\r\n        }\r\n        else\r\n        {\r\n            me.setLoading(false);\r\n        }\r\n    },\r\n\t\r\n\tmigrate_doc: function() {\r\n        var me = this,\r\n            d_doc = me.down(\"[name=d_doc]\");\r\n        \r\n        if (me.doc_lists && me.doc_lists.length)\r\n        {\r\n            var rec = me.doc_lists.splice(0, 1)[0],\r\n                req = new IG$._rpc$();\r\n            \r\n            req.stoploading = false;\r\n            \r\n            req.init(me, \r\n                {\r\n                    ack: \"migration\",\r\n                    payload: {module: me._module},\r\n                    mbody: {\r\n                        option: \"migrate_doc\",\r\n                        eul_meta: me.down(\"[name=eul_metadb]\").getValue(),\r\n                        eul_schema: me.down(\"[name=eul_schema]\").getValue(),\r\n                        bobj: me._bobj.uid,\r\n                        items: [rec.data]\r\n                    },\r\n                    meta_type: \"object\"\r\n                }, me, function(jdoc) {\r\n                    d_doc.selModel.select(rec, false);\r\n                    me.migrate_doc();\r\n                }\r\n            );\r\n            req.send();\r\n        }\r\n        else\r\n        {\r\n            me.setLoading(false);\r\n        }\r\n    },\r\n    \r\n    migrate_bas: function() {\r\n        var me = this,\r\n            d_bas = me.down(\"[name=d_bas]\");\r\n        \r\n        if (me.bas_lists && me.bas_lists.length)\r\n        {\r\n            var rec = me.bas_lists.splice(0, 1)[0],\r\n                req = new IG$._rpc$();\r\n            \r\n            req.stoploading = false;\r\n            \r\n            req.init(me, \r\n                {\r\n                    ack: \"migration\",\r\n                    payload: {module: me._module},\r\n                    mbody: {\r\n                        option: \"migrate_bas\",\r\n                        eul_meta: me.down(\"[name=eul_metadb]\").getValue(),\r\n                        eul_schema: me.down(\"[name=eul_schema]\").getValue(),\r\n                        bobj: me._bobj.uid,\r\n                        items: [rec.data]\r\n                    },\r\n                    meta_type: \"object\"\r\n                }, me, function(jdoc) {\r\n                    d_bas.selModel.select(rec, false);\r\n                    \r\n                    me.migrate_bas();\r\n                }\r\n            );\r\n            req.send();\r\n        }\r\n        else\r\n        {\r\n            me.setLoading(false);\r\n        }\r\n    },\r\n    \r\n    initComponent: function(){\r\n        var me = this;\r\n        \r\n        $s.apply(me, {\r\n            items: [\r\n                {\r\n                    xtype: \"container\",\r\n                    padding: 5,\r\n                    layout: {\r\n                        type: \"vbox\",\r\n                        align: \"stretch\"\r\n                    },\r\n                    items: [\r\n                        {\r\n                        \txtype: \"container\",\r\n                        \tlayout: {\r\n                        \t\ttype: \"hbox\",\r\n                        \t\talign: \"stretch\"\r\n                        \t},\r\n                        \titems: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\txtype: \"fieldset\",\r\n\t\t\t\t\t\t\t\t\tflex: 1,\r\n\t\t\t\t\t\t\t\t\tlayout: {\r\n\t\t\t\t\t\t\t\t\t\ttype: \"vbox\",\r\n\t\t\t\t\t\t\t\t\t\talign: \"stretch\"\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\ttitle: \"Options\",\r\n\t\t\t\t\t\t\t\t\titems: [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t    xtype: \"combobox\",\r\n\t\t\t\t\t\t\t\t\t\t    fieldLabel: \"EUL metadatabase\",\r\n\t\t\t\t\t\t\t\t\t\t    name: \"eul_metadb\",\r\n\t\t\t\t\t\t\t\t\t\t    displayField: \"name\",\r\n\t\t\t\t\t\t\t\t\t\t    labelField: \"name\",\r\n\t\t\t\t\t\t\t\t\t\t    valueField: \"uid\",\r\n\t\t\t\t\t\t\t\t\t\t    store: {\r\n\t\t\t\t\t\t\t\t\t\t        fields: [\"uid\", \"name\", \"disp\"]\r\n\t\t\t\t\t\t\t\t\t\t    },\r\n\t\t\t\t\t\t\t\t\t\t    listeners: {\r\n\t\t\t\t\t\t\t\t\t\t        change: function(tobj) {\r\n\t\t\t\t\t\t\t\t\t\t        \tthis.updateSchemas(tobj.getValue());\r\n\t\t\t\t\t\t\t\t\t\t        },\r\n\t\t\t\t\t\t\t\t\t\t        scope: this\r\n\t\t\t\t\t\t\t\t\t\t    }\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t    xtype: \"combobox\",\r\n\t\t\t\t\t\t\t\t\t\t    fieldLabel: \"EUL Schema\",\r\n\t\t\t\t\t\t\t\t\t\t    name: \"eul_schema\",\r\n\t\t\t\t\t\t\t\t\t\t    displayField: \"name\",\r\n\t\t\t\t\t\t\t\t\t\t    labelField: \"name\",\r\n\t\t\t\t\t\t\t\t\t\t    valueField: \"name\",\r\n\t\t\t\t\t\t\t\t\t\t    store: {\r\n\t\t\t\t\t\t\t\t\t\t        fields: [\"uid\", \"name\", \"disp\"]\r\n\t\t\t\t\t\t\t\t\t\t    }\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\txtype: \"container\",\r\n\t\t\t\t\t\t\t\t\twidth: 20\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\txtype: \"fieldset\",\r\n\t\t\t\t\t\t\t\t\tflex: 1,\r\n\t\t\t\t\t\t\t\t\ttitle: \"Target Meta\",\r\n\t\t\t\t\t\t\t\t\tlayout: {\r\n\t\t\t\t\t\t\t\t\t\ttype: \"vbox\",\r\n\t\t\t\t\t\t\t\t\t\talign: \"stretch\"\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\titems: [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\txtype: \"fieldcontainer\",\r\n\t\t\t\t\t\t\t\t\t\t\tlayout: {\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"hbox\",\r\n\t\t\t\t\t\t\t\t\t\t\t\talign: \"stretch\"\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\tfieldLabel: \"Target Business Object\",\r\n\t\t\t\t\t\t\t\t\t\t\titems: [\r\n\t\t\t\t\t\t\t\t\t\t    \t{\r\n\t\t\t\t\t\t\t\t\t\t    \t\txtype: \"textfield\",\r\n\t\t\t\t\t\t\t\t\t\t    \t\tflex: 1,\r\n\t\t\t\t\t\t\t\t\t\t    \t\tname: \"tbobject\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\temptyText: IRm$.r1(\"M_SEL_ITEM\"),\r\n\t\t\t\t\t\t\t\t\t\t    \t\treadOnly: true\r\n\t\t\t\t\t\t\t\t\t\t    \t},\r\n\t\t\t\t\t\t\t\t\t\t    \t{\r\n\t\t\t\t\t\t\t\t\t\t    \t\txtype: \"button\",\r\n\t\t\t\t\t\t\t\t\t\t    \t\t// text: \"..\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ticonCls: \"icon-toolbar-search\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttooltip: IRm$.r1(\"B_SEARCH\"),\r\n\t\t\t\t\t\t\t\t\t\t    \t\thandler: function() {\r\n\t\t\t\t\t\t\t\t\t\t    \t\t\tvar dlgitemsel = new IG$.metaSelectDlg({\r\n\t\t\t\t\t\t\t\t\t\t    \t\t\t\tvisibleItems: \"folder;bobject\",\r\n\t\t\t\t\t\t\t\t    \t\t\t            tree_options: {\r\n\t\t\t\t\t\t\t\t    \t\t\t                cubebrowse: true,\r\n\t\t\t\t\t\t\t\t    \t\t\t                rootuid: null\r\n\t\t\t\t\t\t\t\t    \t\t\t            },\r\n\t\t\t\t\t\t\t\t\t\t    \t\t\t\tcallback: new IG$.callBackObj(me, function(item) {\r\n\t\t\t\t\t\t\t\t\t\t    \t\t\t\t\tvar tbobject = me.down(\"[name=tbobject]\");\r\n\t\t\t\t\t\t\t\t\t\t    \t\t\t\t\ttbobject.setValue(item.name);\r\n\t\t\t\t\t\t\t\t\t\t    \t\t\t\t\tme._bobj = item;\r\n\t\t\t\t\t\t\t\t\t\t    \t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t    \t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t    \t\t\t\r\n\t\t\t\t\t\t\t\t\t\t    \t\t\tIG$.checkLogin(this, dlgitemsel);\r\n\t\t\t\t\t\t\t\t\t\t    \t\t},\r\n\t\t\t\t\t\t\t\t\t\t    \t\tscope: this\r\n\t\t\t\t\t\t\t\t\t\t    \t}\r\n\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n                        \t]\r\n                        },\r\n                        {\r\n                            xtype: \"fieldset\",\r\n                            flex: 1,\r\n                            layout: {\r\n                                type: \"vbox\",\r\n                                align: \"stretch\"\r\n                            },\r\n                            title: \"EEX file upload\",\r\n                            items: [\r\n                                {\r\n                                    html: \"<div class='m_fileupload'></div>\",\r\n                                    name: \"d_file\",\r\n                                    height: 120,\r\n                                    bodyPadding: 10\r\n                                },\r\n                                {\r\n                                    name: \"d_upfiles\",\r\n                                    xtype: \"gridpanel\",\r\n                                    height: 320,\r\n                                    hidden: true,\r\n                                    selType: \"checkboxmodel\",\r\n                                    selModel:  {\r\n                                        mode: \"MULTI\"\r\n                                    },\r\n                                    store: {\r\n                                        fields: [\r\n                                            \"uid\", \"filename\", \"fileext\"\r\n                                        ]\r\n                                    },\r\n                                    columns: [\r\n                                        {\r\n                                            text: IRm$.r1(\"L_FILENAME\"),\r\n                                            dataIndex: \"filename\",\r\n                                            flex: 1\r\n                                        },\r\n                                        {\r\n                                            text: IRm$.r1(\"L_FILEEXT\"),\r\n                                            dataIndex: \"fileext\",\r\n                                            flex: 1\r\n                                        },\r\n                                        {\r\n                                            xtype: 'actioncolumn',\r\n                                            width: 20,\r\n                                            items: [\r\n                                                {\r\n                                                    iconCls: \"icon-grid-delete\",\r\n                                                    tooltip: 'Delete item',\r\n                                                    handler: function (grid, rowIndex, colIndex) {\r\n                                                        var rec = grid.store.getAt(rowIndex);\r\n                                                        \r\n                                                        grid.store.remove(rec);\r\n                                                    }\r\n                                                }\r\n                                            ]\r\n                                        }\r\n                                    ],\r\n                                    bbar: [\r\n                                        \"->\",\r\n                                        {\r\n                                            xtype: \"button\",\r\n                                            text: \"Commit All Files\",\r\n                                            handler: function() {\r\n                                                this.toolbarHandler(\"cmd_c_files\");\r\n                                            },\r\n                                            scope: this\r\n                                        },\r\n                                        {\r\n                                            xtype: \"button\",\r\n                                            text: \"Cancel All Files\",\r\n                                            handler: function() {\r\n                                                var me = this,\r\n                                                    d_upfiles = me.down(\"[name=d_upfiles]\");\r\n                                                    \r\n                                                d_upfiles.store.removeAll();\r\n                                                d_upfiles.hide();\r\n                                                \r\n                                                me.down(\"[name=d_file]\").hide();\r\n                                            },\r\n                                            scope: this\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            ]\r\n                        },\r\n\t\t\t\t\t\t{\r\n                            xtype: \"fieldset\",\r\n                            flex: 1,\r\n                            layout: {\r\n                                type: \"vbox\",\r\n                                align: \"stretch\"\r\n                            },\r\n                            title: \"Documents\",\r\n                            items: [\r\n                                {\r\n                                    name: \"d_doc\",\r\n                                    xtype: \"gridpanel\",\r\n                                    height: 300,\r\n                                    selType: \"checkboxmodel\",\r\n                                    selModel:  {\r\n                                        mode: \"MULTI\"\r\n                                    },\r\n                                    store: {\r\n                                        fields: [\r\n                                            \"name\", \"id\", \"description\"\r\n                                        ]\r\n                                    },\r\n                                    columns: [\r\n                                        {\r\n                                            text: IRm$.r1(\"B_NAME\"),\r\n                                            dataIndex: \"name\",\r\n                                            flex: 1\r\n                                        },\r\n                                        {\r\n                                            text: IRm$.r1(\"B_DESC\"),\r\n                                            dataIndex: \"description\",\r\n                                            flex: 1\r\n                                        }\r\n                                    ],\r\n                                    bbar: [\r\n                                        {\r\n                                            xtype: \"button\",\r\n                                            text: \"Refresh\",\r\n                                            handler: function() {\r\n                                                this.toolbarHandler(\"cmd_r_doc\");\r\n                                            },\r\n                                            scope: this\r\n                                        },\r\n                                        \"->\",\r\n                                        {\r\n                                            xtype: \"button\",\r\n                                            text: \"Commit All Files\",\r\n                                            handler: function() {\r\n                                                this.toolbarHandler(\"cmd_c_doc\");\r\n                                            },\r\n                                            scope: this\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            ]\r\n                        },\r\n                        {\r\n                            xtype: \"fieldset\",\r\n                            flex: 1,\r\n                            layout: {\r\n                                type: \"vbox\",\r\n                                align: \"stretch\"\r\n                            },\r\n                            title: \"Business Area\",\r\n                            items: [\r\n                                {\r\n                                    name: \"d_bas\",\r\n                                    xtype: \"gridpanel\",\r\n                                    height: 300,\r\n                                    selType: \"checkboxmodel\",\r\n                                    selModel:  {\r\n                                        mode: \"MULTI\"\r\n                                    },\r\n                                    store: {\r\n                                        fields: [\r\n                                            \"name\", \"id\", \"description\"\r\n                                        ]\r\n                                    },\r\n                                    columns: [\r\n                                        {\r\n                                            text: IRm$.r1(\"B_NAME\"),\r\n                                            dataIndex: \"name\",\r\n                                            flex: 1\r\n                                        },\r\n                                        {\r\n                                            text: IRm$.r1(\"B_DESC\"),\r\n                                            dataIndex: \"description\",\r\n                                            flex: 1\r\n                                        }\r\n                                    ],\r\n                                    bbar: [\r\n                                        {\r\n                                            xtype: \"button\",\r\n                                            text: \"Refresh\",\r\n                                            handler: function() {\r\n                                                this.toolbarHandler(\"cmd_r_bas\");\r\n                                            },\r\n                                            scope: this\r\n                                        },\r\n                                        \"->\",\r\n                                        {\r\n                                            xtype: \"button\",\r\n                                            text: \"Commit All Files\",\r\n                                            handler: function() {\r\n                                                this.toolbarHandler(\"cmd_c_bas\");\r\n                                            },\r\n                                            scope: this\r\n                                        },\r\n                                        {\r\n                                            xtype: \"button\",\r\n                                            text: \"Cancel All Files\",\r\n                                            handler: function() {\r\n                                                var me = this,\r\n                                                    d_upfiles = me.down(\"[name=d_upfiles]\");\r\n                                                    \r\n                                                d_upfiles.store.removeAll();\r\n                                                d_upfiles.hide();\r\n                                                \r\n                                                me.down(\"[name=d_file]\").hide();\r\n                                            },\r\n                                            scope: this\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        })\r\n        IG$.mg_disco.superclass.initComponent.call(this);\r\n    },\r\n    \r\n    listeners: {\r\n        afterrender: function(tobj) {\r\n            tobj.initapp();\r\n        }\r\n    }\r\n});"]}