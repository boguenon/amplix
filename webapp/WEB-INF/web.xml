<?xml version="1.0" encoding="UTF-8"?>
<web-app id="amplix" version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<!-- xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd" -->
	<display-name>amplix</display-name>
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>
	<!--   REMOVE THIS COMMENT if web deploy
	<context-param>
    	<param-name>APP_HOME</param-name>
    	<param-value>c:/amplix/</param-value>
  	</context-param>
  	REMOVE THIS COMMENT  -->   
	<error-page>
 		<error-code>404</error-code>
 		<location>/404.html</location>
	</error-page>
	<error-page>
 		<error-code>500</error-code>
 		<location>/500.html</location>
	</error-page>
    <session-config>
        <session-timeout>120</session-timeout>
    </session-config>
    <!-- 
	    30 MB => 31457280
	    50 MB =>  52428800
	    100 MB => 104857600
		200 MB => 209715200
		250 MB => 262144000
		maximum file size : 250MB 
	-->
	<multipart-config>
		<max-file-size>31457280</max-file-size>
		<max-request-size>31457280</max-request-size>
		<file-size-threshold>0</file-size-threshold>
	</multipart-config>

	<servlet>
		<servlet-name>amplix_rest</servlet-name>
		<servlet-class>
			com.amplix.rpc.igcRpc
		</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>amplix_rest</servlet-name>
		<url-pattern>/krcp/*</url-pattern>
	</servlet-mapping>

	<!-- remove after install -->
	<servlet>
		<servlet-name>installproc</servlet-name>
		<servlet-class>
			com.amplix.rpc.igcInstall
		</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>installproc</servlet-name>
		<url-pattern>/servlet/ircp/*</url-pattern>
	</servlet-mapping>
	<!-- end of remove after install -->
	
	<!-- bridged connection to load balancing api
	     need to setup with bridge.properties
	<servlet>
		<servlet-name>amplix_api_bridge</servlet-name>
		<servlet-class>com.amplix.rpc.igcBridge</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>amplix_api_bridge</servlet-name>
		<url-pattern>/servlet/brcp</url-pattern>
	</servlet-mapping>
	-->
	
  	<listener>
  		<listener-class>com.amplix.rpc.igcSessionListener</listener-class>
  	</listener>
  	<listener>
  		<listener-class>com.amplix.rpc.igcFileUploadListener</listener-class>
  	</listener>
  	<listener>
  		<listener-class>com.amplix.rpc.igcContextListener</listener-class>
  	</listener>
  	
  	<filter>
	    <filter-name>UrlRewriteFilter</filter-name>
	    <filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
	</filter>
	<filter-mapping>
	    <filter-name>UrlRewriteFilter</filter-name>
	    <url-pattern>/go/*</url-pattern>
	    <dispatcher>REQUEST</dispatcher>
	    <dispatcher>FORWARD</dispatcher>
	</filter-mapping>
	<filter-mapping>
	    <filter-name>UrlRewriteFilter</filter-name>
	    <url-pattern>/run/*</url-pattern>
	    <dispatcher>REQUEST</dispatcher>
	    <dispatcher>FORWARD</dispatcher>
	</filter-mapping>
	
	<filter>
	    <filter-name>httpHeaderSecurity</filter-name>
	    <filter-class>org.apache.catalina.filters.HttpHeaderSecurityFilter</filter-class>
	    <init-param>
	        <param-name>antiClickJackingOption</param-name>
	        <param-value>SAMEORIGIN</param-value>
	    </init-param>
	</filter>
	
	<filter-mapping>
	    <filter-name>httpHeaderSecurity</filter-name>
	    <url-pattern>/*</url-pattern>
	    <dispatcher>REQUEST</dispatcher>
	</filter-mapping>
	<!-- 
	<filter>
  		<filter-name>CorsFilter</filter-name>
  		<filter-class>org.apache.catalina.filters.CorsFilter</filter-class>
  		<init-param>
  			<param-name>cors.allowed.origins</param-name>
  			<param-value>*</param-value>
  		</init-param>
  		<init-param>
			<param-name>cors.allowed.methods</param-name>
			<param-value>GET,POST,HEAD,OPTIONS,PUT</param-value>
		</init-param>
		<init-param>
			<param-name>cors.allowed.headers</param-name>
			<param-value>Content-Type,X-Requested-With,accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers</param-value>
		</init-param>
		<init-param>
			<param-name>cors.exposed.headers</param-name>
			<param-value>Access-Control-Allow-Origin,Access-Control-Allow-Credentials</param-value>
		</init-param>
		<init-param>
			<param-name>cors.support.credentials</param-name>
			<param-value>false</param-value>
		</init-param>
		<init-param>
			<param-name>cors.preflight.maxage</param-name>
			<param-value>10</param-value>
		</init-param>
	</filter>
	<filter-mapping>
  		<filter-name>CorsFilter</filter-name>
  		<url-pattern>/*</url-pattern>
	</filter-mapping>
	 -->
</web-app>
